{"ast":null,"code":"var _jsxFileName = \"/Users/dragosvlasie/Documents/GitHub/Project-planner/src/components/projects/ProjectDetails.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nvar ProjectDetails = function ProjectDetails(props) {\n  console.log('props:', props);\n  var id = props.match.params.id;\n  var project = props.project;\n\n  if (project) {\n    React.createElement(\"div\", {\n      className: \"container section project-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, project.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, project.content)), React.createElement(\"div\", {\n      className: \"card-action gret lighten-4 grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Posted by \", project.authorFirstName), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, project.createdAt)));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  console.log(state);\n  var id = ownProps.match.params.id;\n  var projects = state.firestore.data.projects;\n  var project = projects ? projects[id] : null;\n  return {\n    project: project\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'projects'\n}]))(ProjectDetails);","map":{"version":3,"sources":["/Users/dragosvlasie/Documents/GitHub/Project-planner/src/components/projects/ProjectDetails.js"],"names":["React","connect","firestoreConnect","compose","ProjectDetails","props","console","log","id","match","params","project","title","content","authorFirstName","createdAt","mapStateToProps","state","ownProps","projects","firestore","data","collection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAY;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACA,MAAMG,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAF+B,MAGvBG,OAHuB,GAGXN,KAHW,CAGvBM,OAHuB;;AAI/B,MAAGA,OAAH,EAAY;AACR;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,OAAO,CAACC,KAAvC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACE,OAAb,CAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBF,OAAO,CAACG,eAAzB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,OAAO,CAACI,SAAf,CAFA,CALJ;AAUH,GAXD,MAWM;AACF,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;AAEJ,CAtBD;;AAwBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzCZ,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AAEA,MAAMT,EAAE,GAAGU,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBF,EAAjC;AACA,MAAMW,QAAQ,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBF,QAAtC;AACA,MAAMR,OAAO,GAAGQ,QAAQ,GAAGA,QAAQ,CAACX,EAAD,CAAX,GAAiB,IAAzC;AACA,SAAO;AACHG,IAAAA,OAAO,EAAEA;AADN,GAAP;AAIH,CAVD;;AAYA,eAAeR,OAAO,CAClBF,OAAO,CAACe,eAAD,CADW,EAElBd,gBAAgB,CAAC,CACb;AAAEoB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKblB,cALa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nconst ProjectDetails = (props)  => {\n    console.log('props:', props)\n    const id = props.match.params.id;\n    const { project } = props;\n    if(project) {\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <span className=\"card-title\">{ project.title }</span>\n                <p>{ project.content }</p>\n            </div>\n            <div className=\"card-action gret lighten-4 grey-text\">\n            <div>Posted by { project.authorFirstName }</div>\n            <div>{ project.createdAt}</div>\n            </div>\n        </div>\n    }else {\n        return (\n            <div className=\"container center\">\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    console.log(state);\n\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id]: null;\n    return {\n        project: project\n\n    }\n}\n \nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n"]},"metadata":{},"sourceType":"module"}