{"ast":null,"code":"export var signIn = function signIn(credentials) {\n  return function (dispatch, getState, _ref) {\n    var getFirebase = _ref.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then(function () {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err: err\n      });\n    });\n  };\n};\nexport var signOut = function signOut() {\n  return function (dispatch, getState, _ref2) {\n    var getFirebase = _ref2.getFirebase;\n    var firebase = getFirebase();\n    firebase.auth().signOut().then(function () {\n      dispatch({\n        type: 'SIGNOUT_SUCCESS'\n      });\n    });\n  };\n};\nexport var signUp = function signUp(newUser) {\n  return function (dispatch, getState, _ref3) {\n    var getFirebase = _ref3.getFirebase,\n        getFirestore = _ref3.getFirestore;\n    var firebase = getFirebase();\n    var firestore = getFirestore();\n    firebase.auth().createUserWithEmailAndPassword(newUser.email, newUser.password).then(function (resp) {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(function () {\n      dispatch({\n        type: 'SIGNUP_SUCCESS'\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: 'SIGNUP_ERROR',\n        err: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/dragosvlasie/Documents/GitHub/Project-planner/src/store/actions/authActions.js"],"names":["signIn","credentials","dispatch","getState","getFirebase","firebase","auth","signInWithEmailAndPassword","email","password","then","type","catch","err","signOut","signUp","newUser","getFirestore","firestore","createUserWithEmailAndPassword","resp","collection","doc","user","uid","set","firstName","lastName","initials"],"mappings":"AAAA,OAAO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,WAAD,EAAiB;AACrC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAAuC;AAAA,QAAjBC,WAAiB,QAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBC,0BAAhB,CACEN,WAAW,CAACO,KADd,EAEEP,WAAW,CAACQ,QAFd,EAGEC,IAHF,CAGO,YAAM;AACXR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KALD,EAKGC,KALH,CAKS,UAACC,GAAD,EAAS;AAChBX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,aAAR;AAAuBE,QAAAA,GAAG,EAAHA;AAAvB,OAAD,CAAR;AACD,KAPD;AASD,GAZD;AAaD,CAdM;AAgBP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAACZ,QAAD,EAAWC,QAAX,SAAuC;AAAA,QAAjBC,WAAiB,SAAjBA,WAAiB;AAC5C,QAAMC,QAAQ,GAAGD,WAAW,EAA5B;AAEAC,IAAAA,QAAQ,CAACC,IAAT,GAAgBQ,OAAhB,GAA0BJ,IAA1B,CAA+B,YAAM;AACnCR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD;AAGD,GAND;AAOD,CARM;AAUP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD,EAAa;AACjC,SAAO,UAACd,QAAD,EAAWC,QAAX,SAAqD;AAAA,QAA/BC,WAA+B,SAA/BA,WAA+B;AAAA,QAAlBa,YAAkB,SAAlBA,YAAkB;AAC1D,QAAMZ,QAAQ,GAAGD,WAAW,EAA5B;AACA,QAAMc,SAAS,GAAGD,YAAY,EAA9B;AAEAZ,IAAAA,QAAQ,CAACC,IAAT,GAAgBa,8BAAhB,CACEH,OAAO,CAACR,KADV,EAEEQ,OAAO,CAACP,QAFV,EAGEC,IAHF,CAGO,UAAAU,IAAI,EAAI;AACb,aAAOF,SAAS,CAACG,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCF,IAAI,CAACG,IAAL,CAAUC,GAA5C,EAAiDC,GAAjD,CAAqD;AAC1DC,QAAAA,SAAS,EAAEV,OAAO,CAACU,SADuC;AAE1DC,QAAAA,QAAQ,EAAEX,OAAO,CAACW,QAFwC;AAG1DC,QAAAA,QAAQ,EAAEZ,OAAO,CAACU,SAAR,CAAkB,CAAlB,IAAuBV,OAAO,CAACW,QAAR,CAAiB,CAAjB;AAHyB,OAArD,CAAP;AAKD,KATD,EASGjB,IATH,CASQ,YAAM;AACZR,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAXD,EAWGC,KAXH,CAWS,UAACC,GAAD,EAAS;AAChBX,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,GAAG,EAAHA;AAAxB,OAAD,CAAR;AACD,KAbD;AAcD,GAlBD;AAmBD,CApBM","sourcesContent":["export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n    \n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email, \n      newUser.password\n    ).then(resp => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}